services:
  nats:
    # Run me:
    # $ docker compose exec -it nats nats-server --signal reload

    # NOTE: the 'alpine' tag has some Linux binaries line "sh" and "wget".
    # Vanilla "nats:latest" only has the NATS binary and no way to inspect the container
    image: nats:alpine
    command:
    - -c=/nats-server.conf
    - --http_port=8222
    - --jetstream  # JetStream enable
    - -sd=/data    # JetStream store
    # # Debug mode
    # - --debug
    # - --trace
    # Cluster
    - --cluster_name=NATS
    - --cluster=nats://0.0.0.0:6222/
    - --routes=nats://nats_cluster:password@nats_mqtt_notls:6222/
    ports:
      - 4222:4222  # NATS clients
      - 6222:6222  # Cluster
      - 8222:8222  # monitoring
      # - 1883:1883  # MQTT
      - 8883:8883  # MQTTS
    volumes:
      - nats_data:/data
      # Choose one:
      # 1) Sample
      - ./nats-server.conf:/nats-server.conf
      # 2) JWT config (decentralized: clients bearing their JWT tokens)
      - ./nats-server-mqtt-jwt.conf:/nats-server.conf
      # 3) TLS with MQTT, clustered together with a server with noTLS
      - ./nats-server-mqtt-tls.conf:/nats-server.conf
      - ./tls/ca.crt:/ca.crt
      - ./tls/certs/server.crt:/server.crt
      - ./tls/certs/server.key:/server.key
    networks:
    - nats
    healthcheck: { test: 'wget http://localhost:8222/healthz -q -S -O -', interval: 30s, timeout: 3s, retries: 3, start_period: 3s }

  # Plain MQTT server, no TLS
  nats_mqtt_notls:
    image: nats:latest
    command:
    - -c=/nats-server.conf
    - --jetstream
    - -sd=/data
    # Cluster
    - --cluster_name=NATS
    - --cluster=nats://0.0.0.0:6222/
    - --routes=nats://nats_cluster:password@nats:6222/  # connect to the seed
    ports:
      # - 4222:4222  # NATS clients
      # - 8222:8222  # monitoring
      - 1883:1883  # MQTT
    volumes:
      - ./nats-server-mqtt-notls.conf:/nats-server.conf
    networks:
    - nats

  natsbox:
    # Run me:
    # $ docker compose run --rm natsbox nats account info
    # $ docker compose run --rm natsbox nats --context=app account info
    # $ docker compose run --rm natsbox nats sub '>'
    image: natsio/nats-box:latest
    tty: true
    restart: no
    profiles:
    - oneoff
    depends_on:
    - nats
    networks:
    - nats
    volumes:
    - ./nsc:/nsc  # Persist nsc keys
    environment:
      NATS_URL: nats://sys:admin@nats:4222/
      # NATS_CONTEXT: sys

  # See: easily add nodes to a cluster:
  #   https://docs.nats.io/running-a-nats-service/nats_docker
  # nats:
  #   command: "--cluster_name NATS --cluster nats://0.0.0.0:6222 --http_port 8222 "
  # nats-1:
  #   image: nats
  #   command: "--cluster_name NATS --cluster nats://0.0.0.0:6222 --routes=nats://ruser:T0pS3cr3t@nats:6222"
  #   networks: ["nats"]
  #   depends_on: ["nats"]
  # nats-2:
  #   image: nats
  #   command: "--cluster_name NATS --cluster nats://0.0.0.0:6222 --routes=nats://ruser:T0pS3cr3t@nats:6222"
  #   networks: ["nats"]
  #   depends_on: ["nats"]

networks:
  nats:
    name: nats

volumes:
  nats_data:
    name: nats_data
