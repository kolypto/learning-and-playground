# Example MQTT server. Playground.
# Many clients. JWT. Authentication.


# Generated with $ nsc generate config --nats-resolver
#
# $ nsc add operator -n Experiment --sys
# $ nsc edit operator --service-url nats://localhost:4222
# $ nsc describe operator
# $ nsc describe account
# $ nsc generate config --nats-resolver
# $ nsc push -A -u nats://nats:4222

# Example access:
# $ nats --creds /nsc/nkeys/creds/Experiment/SYS/sys.creds account info

# $ nsc add account -n MQTT
# $ nsc add account -n MQTT_SANDBOX
# $ nsc edit account -n MQTT --description "MQTT Authenticated Users" --js-enable=0
# $ nsc edit account -n MQTT_SANDBOX --description "MQTT unauthenticated users"
# $ nsc describe account MQTT
# $ nsc describe account MQTT_SANDBOX
# $ nsc push -A -u nats://nats:4222

# $ nsc select account MQTT
# $ nsc add user --name '1234' -a MQTT --bearer --allow-sub='device.*.to.>' --allow-sub='device.*.to' --allow-pub='device.*.from.*'
# $ nsc add user --name 'server-app' -a MQTT

port: 4222
monitor_port: 8222

jetstream: enabled
server_name: "experiment"

mqtt {
  port: 1883
#   no_auth_user: mqtt_nobody  #-> MQTT_SANDBOX
  ack_wait: "30m"
}





###
### Generated by $ nsc generate config --nats-resolver
###

# This is the operator's JWT token.
# Operator named Experiment
operator: eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJqdGkiOiJCMkJNU1VGT0NONkdJRFFSQUlZS0o2SkRBSUhDMldYT1NRVkpaTEFZQ1U2UFFBVVkzWlRRIiwiaWF0IjoxNzUwMjc1MjY2LCJpc3MiOiJPQzNET1dVWUJDSkdRRU1WVlVZSFdVU0s0NE1DTzdDS1g2M08yM1pNQllFRFNUN09JSVNSNE9UTiIsIm5hbWUiOiJFeHBlcmltZW50Iiwic3ViIjoiT0MzRE9XVVlCQ0pHUUVNVlZVWUhXVVNLNDRNQ083Q0tYNjNPMjNaTUJZRURTVDdPSUlTUjRPVE4iLCJuYXRzIjp7Im9wZXJhdG9yX3NlcnZpY2VfdXJscyI6WyJuYXRzOi8vbmF0czo0MjIyIl0sInN5c3RlbV9hY2NvdW50IjoiQUJPQjRFSjNBSkpMUEhYUE0yVVJCVUJHUUhJQ1pUQjVNT0JZU1pPQUZRV0hONkRMWEZXQ0JXSTIiLCJ0eXBlIjoib3BlcmF0b3IiLCJ2ZXJzaW9uIjoyfX0.XYodT-kViRn9_gL6fRCz4ETp1xzAoDofe_1aV4CHXHG0y3ojrXVWiL_UVb_Unhf1vlogzBW8AkPsioAfRpA6DQ
# System Account named SYS
system_account: ABOB4EJ3AJJLPHXPM2URBUBGQHICZTB5MOBYSZOAFQWHN6DLXFWCBWI2

# configuration of the nats based resolver
resolver {
    # Directory in which the account jwt will be stored
    # NATS servers will share account to achieve eventual consistency
    dir: './jwt'
    # Full: all servers will store all JWT keys.
    # Cache: this server will store only a subset of accounts, saving memory. Set `limit: 1000`
    type: full
    # Support JWT deletion?
    allow_delete: false
    # How often to exchange JWT state in the cluster
    interval: "2m"
    # Timeout for lookup requests in case an account does not exist locally.
    timeout: "1.9s"
}


# will map public keys to account JWTs.
resolver_preload: {
  # Maps the SYS system account public key to JWT with config
  ABOB4EJ3AJJLPHXPM2URBUBGQHICZTB5MOBYSZOAFQWHN6DLXFWCBWI2: eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJqdGkiOiJJVktLSVdKREhUV0RNMktKVVdZN1lLVFRVVkVNV0YzTk43RzI2UDJFSDZDUkZEVVJDS1NBIiwiaWF0IjoxNzUwMjc1MjI5LCJpc3MiOiJPQzNET1dVWUJDSkdRRU1WVlVZSFdVU0s0NE1DTzdDS1g2M08yM1pNQllFRFNUN09JSVNSNE9UTiIsIm5hbWUiOiJTWVMiLCJzdWIiOiJBQk9CNEVKM0FKSkxQSFhQTTJVUkJVQkdRSElDWlRCNU1PQllTWk9BRlFXSE42RExYRldDQldJMiIsIm5hdHMiOnsiZXhwb3J0cyI6W3sibmFtZSI6ImFjY291bnQtbW9uaXRvcmluZy1zdHJlYW1zIiwic3ViamVjdCI6IiRTWVMuQUNDT1VOVC4qLlx1MDAzZSIsInR5cGUiOiJzdHJlYW0iLCJhY2NvdW50X3Rva2VuX3Bvc2l0aW9uIjozLCJkZXNjcmlwdGlvbiI6IkFjY291bnQgc3BlY2lmaWMgbW9uaXRvcmluZyBzdHJlYW0iLCJpbmZvX3VybCI6Imh0dHBzOi8vZG9jcy5uYXRzLmlvL25hdHMtc2VydmVyL2NvbmZpZ3VyYXRpb24vc3lzX2FjY291bnRzIn0seyJuYW1lIjoiYWNjb3VudC1tb25pdG9yaW5nLXNlcnZpY2VzIiwic3ViamVjdCI6IiRTWVMuUkVRLkFDQ09VTlQuKi4qIiwidHlwZSI6InNlcnZpY2UiLCJyZXNwb25zZV90eXBlIjoiU3RyZWFtIiwiYWNjb3VudF90b2tlbl9wb3NpdGlvbiI6NCwiZGVzY3JpcHRpb24iOiJSZXF1ZXN0IGFjY291bnQgc3BlY2lmaWMgbW9uaXRvcmluZyBzZXJ2aWNlcyBmb3I6IFNVQlNaLCBDT05OWiwgTEVBRlosIEpTWiBhbmQgSU5GTyIsImluZm9fdXJsIjoiaHR0cHM6Ly9kb2NzLm5hdHMuaW8vbmF0cy1zZXJ2ZXIvY29uZmlndXJhdGlvbi9zeXNfYWNjb3VudHMifV0sImxpbWl0cyI6eyJzdWJzIjotMSwiZGF0YSI6LTEsInBheWxvYWQiOi0xLCJpbXBvcnRzIjotMSwiZXhwb3J0cyI6LTEsIndpbGRjYXJkcyI6dHJ1ZSwiY29ubiI6LTEsImxlYWYiOi0xfSwic2lnbmluZ19rZXlzIjpbIkFETlhNTEVKWVozUE41QklYSU1IT1NCUkdWREhaU0dYWVdYQUxTNzZQN0RWUk1TREw3SkxMUEtFIl0sImRlZmF1bHRfcGVybWlzc2lvbnMiOnsicHViIjp7fSwic3ViIjp7fX0sImF1dGhvcml6YXRpb24iOnt9LCJ0eXBlIjoiYWNjb3VudCIsInZlcnNpb24iOjJ9fQ.Hu8ccXIdCBTLW2AaLINpHMXmoeHZJWN-hA0Z4lV1_umF2KHtMLG7Anb3sPRkfMQm8pBoS0f8rYi79pb_zp8kCQ,
}
